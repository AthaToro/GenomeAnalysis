#!/bin/bash -l

#SBATCH -A uppmax2024-2-7
#SBATCH -M snowy
#SBATCH -p core
#SBATCH -n 8
#SBATCH -t 01:30:00 
#SBATCH --mail-type=ALL
#SBATCH --mail-user athanasios.toros.0729@student.uu.se
#SBATCH --output=%x.%j.out

# user-defined parameters
export WORK_DIR=$HOME/GenomeAnalysis/Working/2_1_Assembly_polishing/Illumina
THREADS=$(nproc)

echo -e "Working directory: ${WORK_DIR}\n"
echo -e "Genome assembly used: $(basename $2)\n"

module load bioinfo-tools bwa-mem2/2.2.1-20211213-edc703f samtools Pilon/1.24
module list

# Check if an argument is provided
if [ "$#" -ne 2 ]; then
    echo "Error: The script requires both the directory with the reads, and the genome assembly to use.\nUsage: $0 <reads_directory> <genome_assembly>"
    exit 1
fi

# use SNIC_TMP for fast lookup of files
mkdir -v $SNIC_TMP/sample_files

# ======================================================================================

echo -e "Copying files to temporary storage: \n"
# only paired end reads
#$1 is the provided directory from the script invocation
rsync -a --progress $1/*.gz $SNIC_TMP/sample_files

echo "Done"

cd $SNIC_TMP

# ======================================================================================
echo -e "Uncompressing files...\n"
gunzip -vd ./sample_files/*.gz

echo "Done"

# ======================================================================================
echo -e "Copying genome assembly...\n"


mkdir -v ./genome_assembly
cp -v  $2 ./genome_assembly/

echo -e "Done\n"


# ======================================================================================
echo -e "Creating index for assembly...\n"

bwa-mem2 index ./genome_assembly/*.fasta

echo -e "Done\n"


# ======================================================================================

echo -e "Aligning files to reference genome...\n"

mkdir -v ./alignments

for file in ./sample_files/*.fq; do

 
    sample_name=$(basename "$file" | cut -d '_' -f2)

    echo -e "Processing sample ${sample_name}\n"
    bwa-mem2 mem -t $THREADS ./genome_assembly/*.fasta $file > "./alignments/${sample_name}_allignment.sam"

    echo -e "Quick stats:\n"
    samtools flagstats "./alignments/${sample_name}_allignment.sam"

done

echo -e "Done\n"

# ======================================================================================

echo -e "Sorting, indexing and converting alignments to bam file format...\n"


mkdir -v ./sorted_indexed_alignments/

for file in ./alignments/*; do

    echo -e "Processing file ${file}\n"
    sample_name=$(basename "$file" .sam)
    
    samtools sort --threads $THREADS --write-index -o ./sorted_indexed_alignments/${sample_name}_sorted.bam $file 

done


# ======================================================================================

# CHANGED DIRECTORY
cd ./sorted_indexed_alignments/
# bam files for pilon
BAM_FILES=$(ls ./*sorted.bam | tr '\n' ',' | sed 's/,$//')



echo -e "Polishing genome $(basename $2) using reads in directory $1...\n"

mkdir -v ../pilon_output
java -jar $PILON_HOME/pilon.jar --genome ../genome_assembly/*.fasta --bam $BAM_FILES --tracks --changes --vcf --outdir ../pilon_output


#copy files back to working dir

rsync -a --progress ../pilon_output $WORK_DIR

echo -e "\nSuccessful run"
